require-module surrounds
map global user s ': enter-user-mode surrounds<ret>' -docstring "Surround mode"
map global user S ': enter-user-mode surrounds-undo<ret>' -docstring "Surround mode (delete)"

colorscheme gruvbox-dark

eval %sh{kak-lsp --kakoune -s $kak_session}  # Not needed if you load it with plug.kak.
lsp-enable

add-highlighter global/ number-lines
add-highlighter global/ show-whitespaces -lf '~' -tab '|' -tabpad '-' -indent '|'
add-highlighter global/ show-matching

lsp-auto-hover-enable

map global user l %{:enter-user-mode lsp<ret>} -docstring "LSP mode"
map global insert <tab> '<a-;>:try lsp-snippets-select-next-placeholders catch %{ execute-keys -with-hooks <lt>tab> }<ret>' -docstring 'Select next snippet placeholder'
map global object a '<a-semicolon>lsp-object<ret>' -docstring 'LSP any symbol'
map global object <a-a> '<a-semicolon>lsp-object<ret>' -docstring 'LSP any symbol'
map global object e '<a-semicolon>lsp-object Function Method<ret>' -docstring 'LSP function or method'
map global object k '<a-semicolon>lsp-object Class Interface Struct<ret>' -docstring 'LSP class interface or struct'
map global object d '<a-semicolon>lsp-diagnostic-object --include-warnings<ret>' -docstring 'LSP errors and warnings'
map global object D '<a-semicolon>lsp-diagnostic-object<ret>' -docstring 'LSP errors'

define-command tmux-kak-horizontal -params 1.. -docstring '
tmux-kak-horizontal <command> [<arguments>]: create a new kakoune client as a tmux pane
The current pane is split into two, left and right
The kakoune command is executed in a new client' \
%{
    tmux-terminal-horizontal kak -c %val{session} -e "%arg{@}"
}
complete-command tmux-kak-horizontal command
alias global vs tmux-kak-horizontal

define-command tmux-kak-vertical -params 1.. -docstring '
tmux-kak-vertical <command> [<arguments>]: create a new kakoune client as a tmux pane
The current pane is split into two, left and right
The kakoune command is executed in a new client' \
%{
    tmux-terminal-vertical kak -c %val{session} -e "%arg{@}"
}
complete-command tmux-kak-vertical command
alias global sp tmux-kak-vertical

set global tabstop 3

hook global WinCreate '.*' %{ noexpandtab }
hook global WinSetOption filetype=python %{ expandtab; set window softtabstop 4 }

eval %sh{
	hn=$(hostname)
	if [ -n "$hn" -a -f "systems/$hn/kakrc" ]; then
		echo "source 'systems/$hn/kakrc'"
	fi
}
